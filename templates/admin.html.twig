<!doctype html>

<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Tombola du Forum PHP 2017</title>
    <link rel="stylesheet" href="/tombola.css">
</head>

<body>
<section>

</section>
<div class="logo"><img src="/forumphp-2017-vecto.svg" /></div>
<div class="buttons"><button id="play" onclick="draw();">Play</button><button id="reset" onclick="reset()">Reset</button></div>
<h1 class="title"><span>0</span> participants</h1>
<h1 class="winner"></h1>
</body>
<script>
	var usersCount = 0;
	var users = {{ users|json_encode|raw }};
	var usernames = [];

	var usersCountEl = document.querySelector('h1.title span');
	var section = document.querySelector('section');

	var baseImage = document.createElement('img');
	baseImage.classList.add("bubble");
	var baseDiv = document.createElement('div');

	var body = document.querySelector('body');

	var winnerEl = document.querySelector('h1.winner');

	var winnerStyleBackup = null;

	var handleNewUser = function (user) {
		if (typeof usernames[user.nickname] !== "undefined") {
			console.log('doublon');
			return;
        }

		usersCount++;
		usersCountEl.innerText = usersCount;

		var div = baseDiv.cloneNode(false);
		var img = baseImage.cloneNode(false);
		img.src = user.avatar;
		img.style.left = Math.floor(Math.random() * 100) + "%";
		img.style.top = (Math.floor(Math.random() * 450) - 225) + "px";
		div.appendChild(img);
		div.classList.add("x" + usersCount%10);
		div.dataset.username = user.nickname;

		section.appendChild(div);

		usernames[user.nickname] = user;
	};

	for (var user in users) {
        {# @todo remove for #}
        {# var currentUser = users[user];
		var originalNickname = currentUser['nickname']
        for (var i = 0; i < 650; i++) {
        	currentUser['nickname'] = originalNickname + i;
			handleNewUser(currentUser);
        }#}

        handleNewUser(users[user]);

	}

	var conn = new WebSocket('ws://{{ app.request.host }}:8090');
	conn.onopen = function(e) {
		conn.send(JSON.stringify({admin: 1, nickname: "{{ app.request.session.get('user').nickname }}", type: "connection"}));
		console.log("Connection established!");
	};

	conn.onmessage = function(e) {
		console.log(e.data);
		var newUser = JSON.parse(e.data);
		console.log(newUser);
		handleNewUser(newUser);
	};

	var draw = function()
    {
		var winningUser = usernames[Object.keys(usernames)[Math.floor(Math.random() * Object.keys(usernames).length)]];
		document.querySelectorAll('.bubble').forEach(bubble => { bubble.classList.add('hidden'); });

		var winnerDiv = document.querySelector(`div[data-username="${winningUser['nickname']}"]`);

		winnerStyleBackup = winnerDiv.querySelector('img').getAttribute('style');
		winnerDiv.querySelector('img').setAttribute('style', '');

		winnerDiv.classList.add('winner-data');
		winnerDiv.querySelector('img').classList.remove('hidden');

		document.querySelector('h1.title').classList.add('hidden');

		winnerEl.textContent = ''; // Reset previous winner
		var node = document.createTextNode(`${winningUser['name']} (${winningUser['nickname']})`);
        winnerEl.appendChild(node);

        conn.send(JSON.stringify({type: "winner", winner: winningUser}));

    };

	var reset = function()
    {
		winnerEl.textContent = ''; // Reset previous winner

		if (winnerStyleBackup !== null) {
			document.querySelector('.bubble:not(.hidden)').setAttribute('style', winnerStyleBackup);
		}

		document.querySelectorAll('.bubble').forEach(bubble => { bubble.classList.remove('hidden'); });
    	document.querySelector('h1.title').classList.remove('hidden');

    	document.querySelector('div.winner-data').classList.remove('winner-data');
    }
</script>
</html>
